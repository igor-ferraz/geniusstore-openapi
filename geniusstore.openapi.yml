openapi: 3.0.4
info:
  title: Genius Incentizap | OpenAPI 3.0
  description: Documentação para utilização da API Genius para o Incentizap
  contact:
    email: igor.ferraz@eaimkt.com.br
  version: 1.0.12
servers:
  - url: https://pseudo-api.genius.com
tags:
  - name: Autenticação
    description: Métodos para autenticação
  - name: Participantes
    description: Métodos de participantes
  - name: Fale Conosco
    description: Métodos de fale conosco
  - name: KPIs
    description: Métodos de KPIs / extrato / desempenho
  - name: Rankings
    description: Métodos de rankings
  - name: Conteúdos
    description: Métodos de conteúdos
  - name: Notícias
    description: Métodos de notícias
  - name: Games
    description: Métodos de games
paths:
  /api/oAuth2/token:
    post:
      tags:
        - Autenticação
      summary: Obter token de acesso
      description: Obtém o token para acessar métodos protegidos
      operationId: getToken
      requestBody:
        description: Informações de autenticação fornecidas pela EAÍ
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Unauthorized
        '400':
          description: Bad Request
  
  /api/participante/pesquisa:
    get:
      tags:
        - Participantes
      summary: Obter um participante pelo telefone e/ou número
      description: |-
        Obtém o <strong>primeiro</strong> participante que satisfaça os critérios.<br>
        É obrigatório informar <strong>ao menos</strong> um parâmetro (telefone e/ou e-mail).
      operationId: getParticipanteSimples
      parameters:
        - name: telefone
          in: query
          description: |-
            Número de telefone com DDD (apenas números).<br>
            Será comparado com ambos os campos: telefone e celular.
          schema:
            type: string
            example: 11988888888
        - name: email
          in: query
          description: E-mail
          schema:
            type: string
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipanteSimplesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
        - BearerAuth: []
        
  /api/participante/{participanteId}:
    get:
      tags:
        - Participantes
      summary: Obter um participante pelo id
      description: Obtém um participante pelo id
      operationId: getParticipante
      parameters:
        - name: participanteId
          in: path
          description: ID do Participante
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipanteResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
        - BearerAuth: []
        
  /api/participante/{participanteId}/saldo:
    get:
      tags:
        - Participantes
      summary: Obter o saldo de um participante
      description: Obtém o saldo um participante
      operationId: getParticipanteSaldo
      parameters:
        - name: participanteId
          in: path
          description: ID do Participante
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipanteSaldoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/participante/{participanteId}/campanhas:
    get:
      tags:
        - Participantes
      summary: Obter campanhas de um participante
      description: Obtém todas as campanhas de um participante
      operationId: getCampanhasByParticipante
      parameters:
        - name: participanteId
          in: path
          description: ID do Participante
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CampanhaResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/participante/{participanteId}/campanha/{campanhaId}/menus:
    get:
      tags:
        - Participantes
      summary: Obter menus de acordo com o participante e campanha
      description: |-
        Obtém os menus de acordo com o participante e campanha.
        
        <strong>Enum de Jornada</strong>:
        1. FaleConosco
        2. FAQ
        3. Extrato
        4. Ranking
        5. Conteudo
        6. Games
        7. Comunicados
        8. Catalogo
        9. Cadastro
        10. Noticias
      operationId: getMenusByParticipante
      parameters:
        - name: participanteId
          in: path
          description: ID do Participante
          required: true
          schema:
            type: string
            format: uuid
        - name: campanhaId
          in: path
          description: ID da Campanha
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/participante/{participanteId}/campanha/{campanhaId}/faleconosco:
    get:
      tags:
        - Participantes
      summary: Obter chamados do Fale Conosco de acordo com o participante e campanha
      description: Obtém chamados do fale conosco de acordo com o participante e campanha.
      operationId: getChamadosByParticipante
      parameters:
        - name: participanteId
          in: path
          description: ID do Participante
          required: true
          schema:
            type: string
            format: uuid
        - name: campanhaId
          in: path
          description: ID da Campanha
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChamadoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []

  /api/faleconosco/assuntos:
    get:
      tags:
        - Fale Conosco
      summary: Obter assuntos do fale conosco
      description: Obtém assuntos do fale conosco
      operationId: getAssuntosFaleConosco
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssuntoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []

  /api/faleconosco:
    get:
      tags:
        - Fale Conosco
      summary: Obter um chamado do fale conosco por protocolo
      description: Obtém um chamado do fale conosco por protocolo
      operationId: getChamado
      parameters:
        - name: protocolo
          in: query
          description: Protocolo
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChamadoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      security:
        - BearerAuth: []
        
  /api/faleconosco/simplificado:
    post:
      tags:
        - Fale Conosco
      summary: Cria um chamado
      description: Cria um chamado para um participante
      operationId: postChamado
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChamadoRequest'
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChamadoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/kpi/filtros:
    get:
      tags:
        - KPIs
      summary: Obter os possíveis filtros do extrato
      description: Obtém os tipos de exibições do extrato
      operationId: getFiltrosKPI
      parameters:
        - name: participanteId
          in: query
          description: ID do Participante
          required: true
          schema:
            type: string
            format: uuid
        - name: campanhaId
          in: query
          description: ID da Campanha
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtratoFiltroResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/kpi/extrato-incentizap:
    get:
      tags:
        - KPIs
      summary: Obter extrato de um participante
      description: |-
        Obtém extrato de um participante em um determinado período.
        
        <strong>Enum de Exibição</strong>:
          1. Pontuação total
          2. Extrato detalhado
      operationId: getKPIs
      parameters:
        - name: participanteId
          in: query
          description: ID do Participante
          required: true
          schema:
            type: string
            format: uuid
        - name: campanhaId
          in: query
          description: ID da Campanha
          required: true
          schema:
            type: string
            format: uuid
        - name: exibicao
          in: query
          description: Enum de Exibição
          required: true
          schema:
            type: integer
            description: |-
              1. Pontuação total
              2. Extrato detalhado
            enum: [1, 2]
            x-enum-descriptions:
              - Pontuação total
              - Extrato detalhado
        - name: ano
          in: query
          description: Ano
          required: true
          schema:
            type: integer
        - name: mes
          in: query
          description: Mês
          required: true
          schema:
            type: integer
        - name: distribuidoraId
          in: query
          description: ID da Distribuidora
          schema:
            type: string
            format: uuid
        - name: lideradoId
          in: query
          description: ID do Liderado
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExtratoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/ranking/periodos:
    get:
      tags:
        - Rankings
      summary: Obter os períodos de ranking
      description: Obtém os períodos de ranking disponíveis para a campanha
      operationId: getRankingPeriodos
      parameters:
        - name: campanhaId
          in: query
          description: ID da Campanha
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RankingPeriodoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/ranking/filtros-amigaveis:
    get:
      tags:
        - Rankings
      summary: Obter os filtros amigáveis de ranking
      description: Obtém os filtros amigáveis de ranking
      operationId: getRankingFiltros
      parameters:
        - name: ano
          in: query
          description: Ano
          required: true
          schema:
            type: integer
        - name: mes
          in: query
          description: Mês
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RankingFiltroResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/ranking/incentizap:
    get:
      tags:
        - Rankings
      summary: Obter o ranqueamento
      description: Obtém o ranqueamento de acordo com a parametrização
      operationId: getRanking
      parameters:
        - name: participanteId
          in: query
          description: ID do Participante
          required: true
          schema:
            type: string
            format: uuid
        - name: campanhaId
          in: query
          description: ID da Campanha
          required: true
          schema:
            type: string
            format: uuid
        - name: ano
          in: query
          description: Ano
          required: true
          schema:
            type: integer
        - name: mes
          in: query
          description: Mês
          required: true
          schema:
            type: integer
        - name: intervaloMeses
          in: query
          description: Intervalo de meses
          required: true
          schema:
            type: integer
        - name: filtroId
          in: query
          description: ID do Filtro
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RankingResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/conteudo/tipos:
    get:
      tags:
        - Conteúdos
      summary: Obter os tipos de conteúdo
      description: Obtém os tipos de conteúdo
      operationId: getTiposConteudo
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConteudoTipoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/conteudo/tipo/{tipoId}:
    get:
      tags:
        - Conteúdos
      summary: Obter os conteúdos de um tipo
      description: Obtém os conteúdos de um tipo
      operationId: getConteudos
      parameters:
        - name: tipoId
          in: path
          description: ID do Tipo
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConteudoSimplesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/conteudo/{conteudoId}/tipo/{tipoId}:
    get:
      tags:
        - Conteúdos
      summary: Obter um conteúdo completo
      description: Obtém um conteúdo completo
      operationId: getConteudo
      parameters:
        - name: conteudoId
          in: path
          description: ID do Conteúdo
          required: true
          schema:
            type: string
            format: uuid
        - name: tipoId
          in: path
          description: ID do Tipo
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/ConteudoResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/noticias:
    get:
      tags:
        - Notícias
      summary: Obter as notícias com paginação
      description: |-
        Obtém as notícias com paginação.
        
        Para obter a <strong>primeira página</strong>, deve-se enviar <strong>pagina = 0.</strong>
      operationId: getNoticias
      parameters:
        - name: participanteId
          in: query
          description: ID do Participante
          required: true
          schema:
            type: string
            format: uuid
        - name: pagina
          in: query
          description: Página (zero-based)
          required: true
          schema:
            type: integer
        - name: quantidade
          in: query
          description: Quantidade de itens (padrão 5)
          schema:
            type: integer
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoticiaSimplesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
          
  /api/noticia/{noticiaId}:
    get:
      tags:
        - Notícias
      summary: Obter uma notícia completa
      description: Obtém uma notícia completa
      operationId: getNoticia
      parameters:
        - name: noticiaId
          in: path
          description: ID da Notícia
          required: true
          schema:
            type: string
            format: uuid
        - name: participanteId
          in: query
          description: ID do Participante
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NoticiaResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
        
  /api/games:
    get:
      tags:
        - Games
      summary: Obter lista de games
      description: Obtém lista de games de acordo com parametrização
      operationId: getGames
      parameters:
        - name: participanteId
          in: query
          description: ID do Participante
          required: true
          schema:
            type: string
            format: uuid
        - name: tipo
          in: query
          description: ID da Notícia
          schema:
            type: integer
            enum: [1, 2]
            x-enum-descriptions:
              - Quiz
              - Enquete
      responses:
        '200':
          description: Resposta de sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameSimplesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
      security:
        - BearerAuth: []
          
components:
  schemas:
    Telefone:
      type: string
      pattern: '^[1-9]{2}9?[0-9]{8}$'
      example: '11988888888'
      description: Número com DDD (somente números) (dígito 9 obrigatório para celulares)
      
    Endereco:
      type: object
      properties:
        rua:
          type: string
          description: Logradouro
        numero:
          type: string
          description: Número
        complemento:
          type: string
          description: Complemento
        cep:
          type: string
          description: CEP
        bairro:
          type: string
          description: Bairro
        cidade:
          type: string
          description: Cidade
        uf:
          type: string
          description: UF
      
    TokenRequest:
      type: object
      properties:
        grantType:
          type: string
          example: client_credentials
          description: Tipo de autenticação (constante)
        clientId:
          type: string
          format: uuid
          description: ClientId (fornercido pela EAÍ)
        clientSecret:
          type: string
          description: ClientSecret (fornecido pela EAÍ)
          
    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: AccessToken
        tokenType:
          type: string
          description: Tipo do token (Constante)
          example: Bearer
        expiresIn:
          type: integer
          description: Em quantos segundos o AccessToken expirará
          example: 1800
          
    ParticipanteSimplesResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único
          format: uuid
        nome:
          type: string
          description: Nome
          example: Nome Completo
        telefone:
          $ref: '#/components/schemas/Telefone'
        celular:
          $ref: '#/components/schemas/Telefone'
          
    ParticipanteResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único
          format: uuid
        nome:
          type: string
          description: Nome
          example: Nome Completo
        telefone:
          $ref: '#/components/schemas/Telefone'
        celular:
          $ref: '#/components/schemas/Telefone'
        email:
          type: string
          description: E-mail
          format: email
        endereco:
          $ref: '#/components/schemas/Endereco'
          
    ParticipanteSaldoResponse:
      type: object
      properties:
        sucesso:
          type: boolean
          description: Sucesso
        mensagem:
          type: string
          description: Mensagem
        saldo:
          type: number
          format: decimal
          description: Saldo
        habilitado:
          type: boolean
          description: Habilitado
          
    CampanhaResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único
          format: uuid
        nome:
          type: string
          description: Nome
        subtitulo:
          type: string
          description: Subtitulo
        descricao:
          type: string
          description: Descrição
        padrao:
          type: boolean
          description: Padrão
        ordem:
          type: integer
          description: Ordenação
        dataInicial:
          type: string
          format: date-time
        dataFinal:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - Em andamento
            - Fechada
            - Em breve
          
    MenuResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único
          format: uuid
        nome:
          type: string
          description: Nome
        ordem:
          type: integer
          description: Ordenação
        jornada:
          type: integer
          description: |-
            Enum de Jornada
            1. FaleConosco
            2. FAQ
            3. Extrato
            4. Ranking
            5. Conteudo
            6. Games
            7. Comunicados
            8. Catalogo
            9. Cadastro
            10. Noticias
          enum: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
          x-enum-descriptions:
            - FaleConosco
            - FAQ
            - Extrato
            - Ranking
            - Conteudo
            - Games
            - Comunicados
            - Catalogo
            - Cadastro
            - Noticias
            
    ChamadoResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único
          format: uuid
        protocolo:
          type: string
          description: Protocolo
        assunto:
          type: string
          description: Assunto
        mensagem:
          type: string
          description: Mensagem
        ultimaResposta:
          type: string
          description: Mensagem
        status:
          type: string
          description: Status
          enum:
            - Pendente
            - Resolvido
            - Em Andamento
        dataInclusao:
          type: string
          description: Data de Inclusão
          format: date-time
    
    ChamadoRequest:
      type: object
      properties:
        mensagem:
          type: string
          description: Mensagem
        assuntoId:
          type: string
          description: ID do Assunto
          format: uuid
        participanteId:
          type: string
          description: ID do Participante
          format: uuid
          
    AssuntoResponse:
      type: object
      properties:
        id:
          type: string
          description: Identificador único
          format: uuid
        assunto:
          type: string
          description: Assunto
          
    ExtratoResponse:
      type: object
      properties:
        texto:
          type: string
          description: Nome
        ordem:
          type: integer
          description: Ordenação
          
    Distribuidora:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        nome:
          type: string
          description: Nome
        cnpj:
          type: string
          description: CNPJ
    
    Ano:
      type: object
      properties:
        ano:
          type: integer
          description: Ano
        meses:
          type: array
          items:
            type: integer
            
    Liderado:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        nome:
          type: string
          description: Nome
        cpf:
          type: string
          description: CPF
    
    ExtratoFiltroResponse:
      type: object
      properties:
        distribuidoras:
          type: array
          items:
            $ref: '#/components/schemas/Distribuidora'
        liderados:
          type: array
          items:
            $ref: '#/components/schemas/Liderado'
        anos:
          type: array
          items:
            $ref: '#/components/schemas/Ano'
          
    RankingPeriodoResponse:
      type: object
      properties:
        intervaloMeses:
          type: integer
          description: Quantidade de meses no período
        nome:
          type: string
          description: Nome
          
    RankingFiltroResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        nome:
          type: string
          description: Nome
          
    RankingResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        posicao:
          type: integer
          description: Posição
        pontos:
          type: integer
          description: Pontos
        realizado:
          type: number # decimal
          description: Realizado (decimal)
        usuarioAutenticado:
          type: boolean
          description: Resultado do usuário autenticado
        nomeParticipante:
          type: string
          description: Nome do participante
          
    ConteudoTipoResponse:
      type: object
      properties:
        id:
          type: integer
          description: Identificador único
        nome:
          type: string
          description: Nome
          
    ConteudoSimplesResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        tipoId:
          type: integer
          description: ID do Tipo
        descricao:
          type: string
          description: Descrição
        ordem:
          type: integer
          description: Ordenação
    
    ConteudoResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        tipoId:
          type: integer
          description: ID do Tipo
        nome:
          type: string
          description: Nome
        descricao:
          type: string
          description: Descrição
        imagemUrl:
          type: string
          description: URL da imagem
          
    NoticiaSimplesResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        titulo:
          type: string
          description: Título
        dataPublicacao:
          type: string
          format: date-time
          description: Data de publicação
          
    NoticiaResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        titulo:
          type: string
          description: Título
        conteudo:
          type: string
          description: Conteúdo (HTML)
        imagemUrl:
          type: string
          description: URL da imagem
        dataPublicacao:
          type: string
          format: date-time
          description: Data de publicação
        categorias:
          type: array
          items:
            type: string
            
    GameSimplesResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Identificador único
        nome:
          type: string
          description: Nome
        tipo:
          type: integer
          description: Tipo (Enum)
          enum: [1, 2]
          x-enum-descriptions:
            - Quiz
            - Enquete
        dataInicio:
          type: string
          format: date-time
          description: Data inicial
        dataFim:
          type: string
          format: date-time
          description: Data final
          
    ErrorResponse:
      type: object
      properties:
        mensagem:
          type: string
        redirecionaUrl:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
